<?xml version='1.0' encoding='UTF-8'?>
<omcInterface omcVersion="OMCompiler v1.13.2">
  <classes>
    <package id="OpenModelica.Scripting">
      <classes>
        <record id="OpenModelica.Scripting.CheckSettingsResult">
          <code interfaceOnly="false">record CheckSettingsResult
  String OPENMODELICAHOME, OPENMODELICALIBRARY, OMC_PATH, SYSTEM_PATH, OMDEV_PATH;
  Boolean OMC_FOUND;
  String MODELICAUSERCFLAGS, WORKING_DIRECTORY;
  Boolean CREATE_FILE_WORKS, REMOVE_FILE_WORKS;
  String OS, SYSTEM_INFO, SENDDATALIBS, C_COMPILER, C_COMPILER_VERSION;
  Boolean C_COMPILER_RESPONDING, HAVE_CORBA;
  String CONFIGURE_CMDLINE;
  annotation(
    preferredView = "text");
end CheckSettingsResult;</code>
          <components>
            <component className="String" name="OMDEV_PATH" comment="">
              <dimensions/>
            </component>
            <component className="String" name="SYSTEM_PATH" comment="">
              <dimensions/>
            </component>
            <component className="String" name="OMC_PATH" comment="">
              <dimensions/>
            </component>
            <component className="String" name="OPENMODELICALIBRARY" comment="">
              <dimensions/>
            </component>
            <component className="String" name="OPENMODELICAHOME" comment="">
              <dimensions/>
            </component>
            <component className="Boolean" name="OMC_FOUND" comment="">
              <dimensions/>
            </component>
            <component className="String" name="WORKING_DIRECTORY" comment="">
              <dimensions/>
            </component>
            <component className="String" name="MODELICAUSERCFLAGS" comment="">
              <dimensions/>
            </component>
            <component className="Boolean" name="REMOVE_FILE_WORKS" comment="">
              <dimensions/>
            </component>
            <component className="Boolean" name="CREATE_FILE_WORKS" comment="">
              <dimensions/>
            </component>
            <component className="String" name="C_COMPILER_VERSION" comment="">
              <dimensions/>
            </component>
            <component className="String" name="C_COMPILER" comment="">
              <dimensions/>
            </component>
            <component className="String" name="SENDDATALIBS" comment="">
              <dimensions/>
            </component>
            <component className="String" name="SYSTEM_INFO" comment="">
              <dimensions/>
            </component>
            <component className="String" name="OS" comment="">
              <dimensions/>
            </component>
            <component className="Boolean" name="HAVE_CORBA" comment="">
              <dimensions/>
            </component>
            <component className="Boolean" name="C_COMPILER_RESPONDING" comment="">
              <dimensions/>
            </component>
            <component className="String" name="CONFIGURE_CMDLINE" comment="">
              <dimensions/>
            </component>
          </components>
          <classes/>
        </record>
        <package id="OpenModelica.Scripting.Internal">
          <classes>
            <package id="OpenModelica.Scripting.Internal.Time">
              <classes>
                <function id="OpenModelica.Scripting.Internal.Time.readableTime">
                  <code interfaceOnly="true">function readableTime
  input Real sec;
  output String str;
end readableTime;</code>
                  <components>
                    <input_arguments>
                      <input_argument className="Real" name="sec" hasDefault="false">
                        <dimensions/>
                      </input_argument>
                    </input_arguments>
                    <output_arguments>
                      <output_argument className="String" name="str">
                        <dimensions/>
                      </output_argument>
                    </output_arguments>
                  </components>
                  <classes/>
                </function>
                <function id="OpenModelica.Scripting.Internal.Time.timerTick">
                  <code interfaceOnly="true">function timerTick
  input Integer index;
end timerTick;</code>
                  <components>
                    <input_arguments>
                      <input_argument className="Integer" name="index" hasDefault="false">
                        <dimensions/>
                      </input_argument>
                    </input_arguments>
                    <output_arguments/>
                  </components>
                  <classes/>
                </function>
                <function id="OpenModelica.Scripting.Internal.Time.timerTock">
                  <code interfaceOnly="true">function timerTock
  input Integer index;
  output Real elapsed;
end timerTock;</code>
                  <components>
                    <input_arguments>
                      <input_argument className="Integer" name="index" hasDefault="false">
                        <dimensions/>
                      </input_argument>
                    </input_arguments>
                    <output_arguments>
                      <output_argument className="Real" name="elapsed">
                        <dimensions/>
                      </output_argument>
                    </output_arguments>
                  </components>
                  <classes/>
                </function>
                <function id="OpenModelica.Scripting.Internal.Time.timerClear">
                  <code interfaceOnly="true">function timerClear
  input Integer index;
end timerClear;</code>
                  <components>
                    <input_arguments>
                      <input_argument className="Integer" name="index" hasDefault="false">
                        <dimensions/>
                      </input_argument>
                    </input_arguments>
                    <output_arguments/>
                  </components>
                  <classes/>
                </function>
              </classes>
            </package>
            <type id="OpenModelica.Scripting.Internal.FileType">
              <code interfaceOnly="false">type FileType = enumeration(NoFile, RegularFile, Directory, SpecialFile);</code>
              <components>
                <enumeration>
                  <enumerator name="NoFile" comment=""/>
                  <enumerator name="RegularFile" comment=""/>
                  <enumerator name="Directory" comment=""/>
                  <enumerator name="SpecialFile" comment=""/>
                </enumeration>
              </components>
              <classes/>
            </type>
            <function id="OpenModelica.Scripting.Internal.stat">
              <code interfaceOnly="true">function stat
  input String name;
  output FileType fileType;
end stat;</code>
              <components>
                <input_arguments>
                  <input_argument className="String" name="name" hasDefault="false">
                    <dimensions/>
                  </input_argument>
                </input_arguments>
                <output_arguments>
                  <output_argument className="OpenModelica.Scripting.Internal.FileType" name="fileType">
                    <dimensions/>
                  </output_argument>
                </output_arguments>
              </components>
              <classes/>
            </function>
          </classes>
        </package>
        <function id="OpenModelica.Scripting.checkSettings">
          <code interfaceOnly="true">function checkSettings
  output CheckSettingsResult result;
end checkSettings;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="OpenModelica.Scripting.CheckSettingsResult" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.loadFile">
          <code interfaceOnly="true">function loadFile
  input String fileName;
  input String encoding = "UTF-8";
  input Boolean uses = true;
  output Boolean success;
end loadFile;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="encoding" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="uses" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.loadFiles">
          <code interfaceOnly="true">function loadFiles
  input String[:] fileNames;
  input String encoding = "UTF-8";
  input Integer numThreads = OpenModelica.Scripting.numProcessors();
  output Boolean success;
end loadFiles;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileNames" hasDefault="false">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="String" name="encoding" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="numThreads" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.loadEncryptedPackage">
          <code interfaceOnly="true">function loadEncryptedPackage
  input String fileName;
  input String workdir = "&lt;default&gt;" "The output directory for imported encrypted files. &lt;default&gt; will put the files to current working directory.";
  output Boolean success;
end loadEncryptedPackage;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="workdir" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.reloadClass">
          <code interfaceOnly="true">function reloadClass
  input TypeName name;
  input String encoding = "UTF-8";
  output Boolean success;
end reloadClass;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="name" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="encoding" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.loadString">
          <code interfaceOnly="true">function loadString
  input String data;
  input String filename = "&lt;interactive&gt;";
  input String encoding = "UTF-8";
  input Boolean merge = false "if merge is true the parsed AST is merged with the existing AST, default to false which means that is replaced, not merged";
  output Boolean success;
end loadString;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="data" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="filename" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="encoding" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="merge" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.parseString">
          <code interfaceOnly="true">function parseString
  input String data;
  input String filename = "&lt;interactive&gt;";
  output TypeName names[:];
end parseString;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="data" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="filename" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.TypeName" name="names">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.parseFile">
          <code interfaceOnly="true">function parseFile
  input String filename;
  input String encoding = "UTF-8";
  output TypeName names[:];
end parseFile;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="encoding" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.TypeName" name="names">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.loadFileInteractiveQualified">
          <code interfaceOnly="true">function loadFileInteractiveQualified
  input String filename;
  input String encoding = "UTF-8";
  output TypeName names[:];
end loadFileInteractiveQualified;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="encoding" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.TypeName" name="names">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.loadFileInteractive">
          <code interfaceOnly="true">function loadFileInteractive
  input String filename;
  input String encoding = "UTF-8";
  output TypeName names[:];
end loadFileInteractive;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="encoding" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.TypeName" name="names">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.system">
          <code interfaceOnly="true">impure function system
  input String callStr "String to call: sh -c $callStr";
  input String outputFile = "" "The output is redirected to this file (unless already done by callStr)";
  output Integer retval "Return value of the system call; usually 0 on success";
end system;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="callStr" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="outputFile" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="retval">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.system_parallel">
          <code interfaceOnly="true">impure function system_parallel
  input String callStr[:] "String to call: sh -c $callStr";
  input Integer numThreads = numProcessors();
  output Integer retval[:] "Return value of the system call; usually 0 on success";
end system_parallel;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="callStr" hasDefault="false">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Integer" name="numThreads" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="retval">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.saveAll">
          <code interfaceOnly="true">function saveAll
  input String fileName;
  output Boolean success;
end saveAll;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.help">
          <code interfaceOnly="true">function help
  input String topic = "topics";
  output String helpText;
end help;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="topic" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="helpText">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.clear">
          <code interfaceOnly="true">function clear
  output Boolean success;
end clear;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.clearProgram">
          <code interfaceOnly="true">function clearProgram
  output Boolean success;
end clearProgram;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.clearVariables">
          <code interfaceOnly="true">function clearVariables
  output Boolean success;
end clearVariables;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.generateHeader">
          <code interfaceOnly="true">function generateHeader
  input String fileName;
  output Boolean success;
end generateHeader;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.generateSeparateCode">
          <code interfaceOnly="true">function generateSeparateCode
  input TypeName className;
  input Boolean cleanCache = false "If true, the cache is reset between each generated package. This conserves memory at the cost of speed.";
  output Boolean success;
end generateSeparateCode;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="cleanCache" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.generateSeparateCodeDependencies">
          <code interfaceOnly="true">function generateSeparateCodeDependencies
  input String stampSuffix = ".c" "Suffix to add to dependencies (often .c.stamp)";
  output String[:] dependencies;
end generateSeparateCodeDependencies;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="stampSuffix" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="dependencies">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.generateSeparateCodeDependenciesMakefile">
          <code interfaceOnly="true">function generateSeparateCodeDependenciesMakefile
  input String filename "The file to write the makefile to";
  input String directory = "" "The relative path of the generated files";
  input String suffix = ".c" "Often .stamp since we do not update all the files";
  output Boolean success;
end generateSeparateCodeDependenciesMakefile;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="directory" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="suffix" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getLinker">
          <code interfaceOnly="true">function getLinker
  output String linker;
end getLinker;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="linker">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setLinker">
          <code interfaceOnly="true">function setLinker
  input String linker;
  output Boolean success;
end setLinker;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="linker" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getLinkerFlags">
          <code interfaceOnly="true">function getLinkerFlags
  output String linkerFlags;
end getLinkerFlags;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="linkerFlags">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setLinkerFlags">
          <code interfaceOnly="true">function setLinkerFlags
  input String linkerFlags;
  output Boolean success;
end setLinkerFlags;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="linkerFlags" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getCompiler">
          <code interfaceOnly="true">function getCompiler
  output String compiler;
end getCompiler;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="compiler">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setCompiler">
          <code interfaceOnly="true">function setCompiler
  input String compiler;
  output Boolean success;
end setCompiler;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="compiler" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setCFlags">
          <code interfaceOnly="true">function setCFlags
  input String inString;
  output Boolean success;
end setCFlags;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="inString" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getCFlags">
          <code interfaceOnly="true">function getCFlags
  output String outString;
end getCFlags;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="outString">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getCXXCompiler">
          <code interfaceOnly="true">function getCXXCompiler
  output String compiler;
end getCXXCompiler;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="compiler">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setCXXCompiler">
          <code interfaceOnly="true">function setCXXCompiler
  input String compiler;
  output Boolean success;
end setCXXCompiler;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="compiler" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.verifyCompiler">
          <code interfaceOnly="true">function verifyCompiler
  output Boolean compilerWorks;
end verifyCompiler;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Boolean" name="compilerWorks">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setCompilerPath">
          <code interfaceOnly="true">function setCompilerPath
  input String compilerPath;
  output Boolean success;
end setCompilerPath;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="compilerPath" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getCompileCommand">
          <code interfaceOnly="true">function getCompileCommand
  output String compileCommand;
end getCompileCommand;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="compileCommand">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setCompileCommand">
          <code interfaceOnly="true">function setCompileCommand
  input String compileCommand;
  output Boolean success;
end setCompileCommand;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="compileCommand" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setPlotCommand">
          <code interfaceOnly="true">function setPlotCommand
  input String plotCommand;
  output Boolean success;
end setPlotCommand;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="plotCommand" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getSettings">
          <code interfaceOnly="true">function getSettings
  output String settings;
end getSettings;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="settings">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setTempDirectoryPath">
          <code interfaceOnly="true">function setTempDirectoryPath
  input String tempDirectoryPath;
  output Boolean success;
end setTempDirectoryPath;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="tempDirectoryPath" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getTempDirectoryPath">
          <code interfaceOnly="true">function getTempDirectoryPath
  output String tempDirectoryPath;
end getTempDirectoryPath;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="tempDirectoryPath">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getEnvironmentVar">
          <code interfaceOnly="true">function getEnvironmentVar
  input String var;
  output String value "returns empty string on failure";
end getEnvironmentVar;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="var" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="value">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setEnvironmentVar">
          <code interfaceOnly="true">function setEnvironmentVar
  input String var;
  input String value;
  output Boolean success;
end setEnvironmentVar;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="var" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="value" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.appendEnvironmentVar">
          <code interfaceOnly="true">function appendEnvironmentVar
  input String var;
  input String value;
  output String result "returns \"error\" if the variable could not be appended";
end appendEnvironmentVar;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="var" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="value" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setInstallationDirectoryPath">
          <code interfaceOnly="true">function setInstallationDirectoryPath
  input String installationDirectoryPath;
  output Boolean success;
end setInstallationDirectoryPath;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="installationDirectoryPath" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getInstallationDirectoryPath">
          <code interfaceOnly="true">function getInstallationDirectoryPath
  output String installationDirectoryPath;
end getInstallationDirectoryPath;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="installationDirectoryPath">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setModelicaPath">
          <code interfaceOnly="true">function setModelicaPath
  input String modelicaPath;
  output Boolean success;
end setModelicaPath;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="modelicaPath" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getModelicaPath">
          <code interfaceOnly="true">function getModelicaPath
  output String modelicaPath;
end getModelicaPath;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="modelicaPath">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setCompilerFlags">
          <code interfaceOnly="true">function setCompilerFlags
  input String compilerFlags;
  output Boolean success;
end setCompilerFlags;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="compilerFlags" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setDebugFlags">
          <code interfaceOnly="true">function setDebugFlags
  input String debugFlags;
  output Boolean success;
end setDebugFlags;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="debugFlags" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.clearDebugFlags">
          <code interfaceOnly="true">function clearDebugFlags
  output Boolean success;
end clearDebugFlags;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setPreOptModules">
          <code interfaceOnly="true">function setPreOptModules
  input String modules;
  output Boolean success;
end setPreOptModules;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="modules" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setCheapMatchingAlgorithm">
          <code interfaceOnly="true">function setCheapMatchingAlgorithm
  input Integer matchingAlgorithm;
  output Boolean success;
end setCheapMatchingAlgorithm;</code>
          <components>
            <input_arguments>
              <input_argument className="Integer" name="matchingAlgorithm" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getMatchingAlgorithm">
          <code interfaceOnly="true">function getMatchingAlgorithm
  output String selected;
end getMatchingAlgorithm;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="selected">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getAvailableMatchingAlgorithms">
          <code interfaceOnly="true">function getAvailableMatchingAlgorithms
  output String[:] allChoices;
  output String[:] allComments;
end getAvailableMatchingAlgorithms;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="allChoices">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
              <output_argument className="String" name="allComments">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setMatchingAlgorithm">
          <code interfaceOnly="true">function setMatchingAlgorithm
  input String matchingAlgorithm;
  output Boolean success;
end setMatchingAlgorithm;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="matchingAlgorithm" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getIndexReductionMethod">
          <code interfaceOnly="true">function getIndexReductionMethod
  output String selected;
end getIndexReductionMethod;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="selected">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getAvailableIndexReductionMethods">
          <code interfaceOnly="true">function getAvailableIndexReductionMethods
  output String[:] allChoices;
  output String[:] allComments;
end getAvailableIndexReductionMethods;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="allChoices">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
              <output_argument className="String" name="allComments">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setIndexReductionMethod">
          <code interfaceOnly="true">function setIndexReductionMethod
  input String method;
  output Boolean success;
end setIndexReductionMethod;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="method" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setPostOptModules">
          <code interfaceOnly="true">function setPostOptModules
  input String modules;
  output Boolean success;
end setPostOptModules;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="modules" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getTearingMethod">
          <code interfaceOnly="true">function getTearingMethod
  output String selected;
end getTearingMethod;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="selected">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getAvailableTearingMethods">
          <code interfaceOnly="true">function getAvailableTearingMethods
  output String[:] allChoices;
  output String[:] allComments;
end getAvailableTearingMethods;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="allChoices">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
              <output_argument className="String" name="allComments">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setTearingMethod">
          <code interfaceOnly="true">function setTearingMethod
  input String tearingMethod;
  output Boolean success;
end setTearingMethod;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="tearingMethod" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setCommandLineOptions">
          <code interfaceOnly="true">function setCommandLineOptions
  input String option;
  output Boolean success;
end setCommandLineOptions;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="option" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getCommandLineOptions">
          <code interfaceOnly="true">function getCommandLineOptions
  output String[:] flags;
end getCommandLineOptions;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="flags">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getConfigFlagValidOptions">
          <code interfaceOnly="true">function getConfigFlagValidOptions
  input String flag;
  output String validOptions[:];
  output String mainDescription;
  output String descriptions[:];
end getConfigFlagValidOptions;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="flag" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="validOptions">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
              <output_argument className="String" name="mainDescription">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="descriptions">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.clearCommandLineOptions">
          <code interfaceOnly="true">function clearCommandLineOptions
  output Boolean success;
end clearCommandLineOptions;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getVersion">
          <code interfaceOnly="true">function getVersion
  input TypeName cl = $Code(OpenModelica);
  output String version;
end getVersion;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="version">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.regularFileExists">
          <code interfaceOnly="true">function regularFileExists
  input String fileName;
  output Boolean exists;
end regularFileExists;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="exists">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.directoryExists">
          <code interfaceOnly="true">function directoryExists
  input String dirName;
  output Boolean exists;
end directoryExists;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="dirName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="exists">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.stat">
          <code interfaceOnly="true">impure function stat
  input String fileName;
  output Boolean success;
  output Real fileSize;
  output Real mtime;
end stat;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
              <output_argument className="Real" name="fileSize">
                <dimensions/>
              </output_argument>
              <output_argument className="Real" name="mtime">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.readFile">
          <code interfaceOnly="true">impure function readFile
  input String fileName;
  output String contents;
end readFile;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="contents">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.writeFile">
          <code interfaceOnly="true">impure function writeFile
  input String fileName;
  input String data;
  input Boolean append = false;
  output Boolean success;
end writeFile;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="data" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="append" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.compareFilesAndMove">
          <code interfaceOnly="true">impure function compareFilesAndMove
  input String newFile;
  input String oldFile;
  output Boolean success;
end compareFilesAndMove;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="newFile" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="oldFile" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.compareFiles">
          <code interfaceOnly="true">impure function compareFiles
  input String file1;
  input String file2;
  output Boolean isEqual;
end compareFiles;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="file1" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="file2" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="isEqual">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.alarm">
          <code interfaceOnly="true">impure function alarm
  input Integer seconds;
  output Integer previousSeconds;
end alarm;</code>
          <components>
            <input_arguments>
              <input_argument className="Integer" name="seconds" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="previousSeconds">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.regex">
          <code interfaceOnly="true">function regex
  input String str;
  input String re;
  input Integer maxMatches = 1 "The maximum number of matches that will be returned";
  input Boolean extended = true "Use POSIX extended or regular syntax";
  input Boolean caseInsensitive = false;
  output Integer numMatches "-1 is an error, 0 means no match, else returns a number 1..maxMatches";
  output String matchedSubstrings[maxMatches] "unmatched strings are returned as empty";
end regex;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="str" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="re" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="maxMatches" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="extended" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="caseInsensitive" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="numMatches">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="matchedSubstrings">
                <dimensions>
                  <dimension>maxMatches</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.regexBool">
          <code interfaceOnly="true">function regexBool
  input String str;
  input String re;
  input Boolean extended = true "Use POSIX extended or regular syntax";
  input Boolean caseInsensitive = false;
  output Boolean matches;
end regexBool;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="str" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="re" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="extended" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="caseInsensitive" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="matches">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.testsuiteFriendlyName">
          <code interfaceOnly="true">function testsuiteFriendlyName
  input String path;
  output String fixed;
end testsuiteFriendlyName;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="path" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="fixed">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.readFileNoNumeric">
          <code interfaceOnly="true">function readFileNoNumeric
  input String fileName;
  output String contents;
end readFileNoNumeric;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="contents">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getErrorString">
          <code interfaceOnly="true">impure function getErrorString
  input Boolean warningsAsErrors = false;
  output String errorString;
end getErrorString;</code>
          <components>
            <input_arguments>
              <input_argument className="Boolean" name="warningsAsErrors" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="errorString">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getMessagesString">
          <code interfaceOnly="true">function getMessagesString
  output String messagesString;
end getMessagesString;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="messagesString">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <record id="OpenModelica.Scripting.SourceInfo">
          <code interfaceOnly="false">record SourceInfo
  String fileName;
  Boolean readonly;
  Integer lineStart;
  Integer columnStart;
  Integer lineEnd;
  Integer columnEnd;
  annotation(
    preferredView = "text");
end SourceInfo;</code>
          <components>
            <component className="String" name="fileName" comment="">
              <dimensions/>
            </component>
            <component className="Boolean" name="readonly" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="lineStart" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="columnStart" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="lineEnd" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="columnEnd" comment="">
              <dimensions/>
            </component>
          </components>
          <classes/>
        </record>
        <type id="OpenModelica.Scripting.ErrorKind">
          <code interfaceOnly="false">type ErrorKind = enumeration(syntax "syntax errors", grammar "grammatical errors", translation "instantiation errors: up to flat modelica", symbolic "symbolic manipulation error, simcodegen, up to executable file", runtime "simulation/function runtime error", scripting "runtime scripting /interpretation error");</code>
          <components>
            <enumeration>
              <enumerator name="syntax" comment="syntax errors"/>
              <enumerator name="grammar" comment="grammatical errors"/>
              <enumerator name="translation" comment="instantiation errors: up to flat modelica"/>
              <enumerator name="symbolic" comment="symbolic manipulation error, simcodegen, up to executable file"/>
              <enumerator name="runtime" comment="simulation/function runtime error"/>
              <enumerator name="scripting" comment="runtime scripting /interpretation error"/>
            </enumeration>
          </components>
          <classes/>
        </type>
        <type id="OpenModelica.Scripting.ErrorLevel">
          <code interfaceOnly="false">type ErrorLevel = enumeration(notification, warning, error);</code>
          <components>
            <enumeration>
              <enumerator name="notification" comment=""/>
              <enumerator name="warning" comment=""/>
              <enumerator name="error" comment=""/>
            </enumeration>
          </components>
          <classes/>
        </type>
        <record id="OpenModelica.Scripting.ErrorMessage">
          <code interfaceOnly="false">record ErrorMessage
  SourceInfo info;
  String message "After applying the individual arguments";
  ErrorKind kind;
  ErrorLevel level;
  Integer id "Internal ID of the error (just ignore this)";
  annotation(
    preferredView = "text");
end ErrorMessage;</code>
          <components>
            <component className="OpenModelica.Scripting.SourceInfo" name="info" comment="">
              <dimensions/>
            </component>
            <component className="String" name="message" comment="After applying the individual arguments">
              <dimensions/>
            </component>
            <component className="OpenModelica.Scripting.ErrorKind" name="kind" comment="">
              <dimensions/>
            </component>
            <component className="OpenModelica.Scripting.ErrorLevel" name="level" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="id" comment="Internal ID of the error (just ignore this)">
              <dimensions/>
            </component>
          </components>
          <classes/>
        </record>
        <function id="OpenModelica.Scripting.getMessagesStringInternal">
          <code interfaceOnly="true">function getMessagesStringInternal
  input Boolean unique = true;
  output ErrorMessage[:] messagesString;
end getMessagesStringInternal;</code>
          <components>
            <input_arguments>
              <input_argument className="Boolean" name="unique" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.Scripting.ErrorMessage" name="messagesString">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.countMessages">
          <code interfaceOnly="true">function countMessages
  output Integer numMessages;
  output Integer numErrors;
  output Integer numWarnings;
end countMessages;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Integer" name="numMessages">
                <dimensions/>
              </output_argument>
              <output_argument className="Integer" name="numErrors">
                <dimensions/>
              </output_argument>
              <output_argument className="Integer" name="numWarnings">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.clearMessages">
          <code interfaceOnly="true">function clearMessages
  output Boolean success;
end clearMessages;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.runScript">
          <code interfaceOnly="true">impure function runScript
  input String fileName "*.mos";
  output String result;
end runScript;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.echo">
          <code interfaceOnly="true">function echo
  input Boolean setEcho;
  output Boolean newEcho;
end echo;</code>
          <components>
            <input_arguments>
              <input_argument className="Boolean" name="setEcho" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="newEcho">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getClassesInModelicaPath">
          <code interfaceOnly="true">function getClassesInModelicaPath
  output String classesInModelicaPath;
end getClassesInModelicaPath;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="classesInModelicaPath">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getAnnotationVersion">
          <code interfaceOnly="true">function getAnnotationVersion
  output String annotationVersion;
end getAnnotationVersion;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="annotationVersion">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setAnnotationVersion">
          <code interfaceOnly="true">function setAnnotationVersion
  input String annotationVersion;
  output Boolean success;
end setAnnotationVersion;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="annotationVersion" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNoSimplify">
          <code interfaceOnly="true">function getNoSimplify
  output Boolean noSimplify;
end getNoSimplify;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Boolean" name="noSimplify">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setNoSimplify">
          <code interfaceOnly="true">function setNoSimplify
  input Boolean noSimplify;
  output Boolean success;
end setNoSimplify;</code>
          <components>
            <input_arguments>
              <input_argument className="Boolean" name="noSimplify" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getVectorizationLimit">
          <code interfaceOnly="true">function getVectorizationLimit
  output Integer vectorizationLimit;
end getVectorizationLimit;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Integer" name="vectorizationLimit">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setVectorizationLimit">
          <code interfaceOnly="true">function setVectorizationLimit
  input Integer vectorizationLimit;
  output Boolean success;
end setVectorizationLimit;</code>
          <components>
            <input_arguments>
              <input_argument className="Integer" name="vectorizationLimit" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getDefaultOpenCLDevice">
          <code interfaceOnly="true">function getDefaultOpenCLDevice
  output Integer defdevid;
end getDefaultOpenCLDevice;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Integer" name="defdevid">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setDefaultOpenCLDevice">
          <code interfaceOnly="true">function setDefaultOpenCLDevice
  input Integer defdevid;
  output Boolean success;
end setDefaultOpenCLDevice;</code>
          <components>
            <input_arguments>
              <input_argument className="Integer" name="defdevid" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setShowAnnotations">
          <code interfaceOnly="true">function setShowAnnotations
  input Boolean show;
  output Boolean success;
end setShowAnnotations;</code>
          <components>
            <input_arguments>
              <input_argument className="Boolean" name="show" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getShowAnnotations">
          <code interfaceOnly="true">function getShowAnnotations
  output Boolean show;
end getShowAnnotations;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Boolean" name="show">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setOrderConnections">
          <code interfaceOnly="true">function setOrderConnections
  input Boolean orderConnections;
  output Boolean success;
end setOrderConnections;</code>
          <components>
            <input_arguments>
              <input_argument className="Boolean" name="orderConnections" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getOrderConnections">
          <code interfaceOnly="true">function getOrderConnections
  output Boolean orderConnections;
end getOrderConnections;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Boolean" name="orderConnections">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setLanguageStandard">
          <code interfaceOnly="true">function setLanguageStandard
  input String inVersion;
  output Boolean success;
end setLanguageStandard;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="inVersion" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getLanguageStandard">
          <code interfaceOnly="true">function getLanguageStandard
  output String outVersion;
end getLanguageStandard;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="outVersion">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getAstAsCorbaString">
          <code interfaceOnly="true">function getAstAsCorbaString
  input String fileName = "&lt;interactive&gt;";
  output String result "returns the string if fileName is interactive; else it returns ok or error depending on if writing the file succeeded";
end getAstAsCorbaString;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.cd">
          <code interfaceOnly="true">function cd
  input String newWorkingDirectory = "";
  output String workingDirectory;
end cd;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="newWorkingDirectory" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="workingDirectory">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.mkdir">
          <code interfaceOnly="true">function mkdir
  input String newDirectory;
  output Boolean success;
end mkdir;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="newDirectory" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.copy">
          <code interfaceOnly="true">function copy
  input String source;
  input String destination;
  output Boolean success;
end copy;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="source" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="destination" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.remove">
          <code interfaceOnly="true">function remove
  input String path;
  output Boolean success "Returns true on success.";
end remove;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="path" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.checkModel">
          <code interfaceOnly="true">function checkModel
  input TypeName className;
  output String result;
end checkModel;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.checkAllModelsRecursive">
          <code interfaceOnly="true">function checkAllModelsRecursive
  input TypeName className;
  input Boolean checkProtected = false "Checks also protected classes if true";
  output String result;
end checkAllModelsRecursive;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="checkProtected" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.typeOf">
          <code interfaceOnly="true">function typeOf
  input VariableName variableName;
  output String result;
end typeOf;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.VariableName" name="variableName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.instantiateModel">
          <code interfaceOnly="true">function instantiateModel
  input TypeName className;
  output String result;
end instantiateModel;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.buildOpenTURNSInterface">
          <code interfaceOnly="true">function buildOpenTURNSInterface
  input TypeName className;
  input String pythonTemplateFile;
  input Boolean showFlatModelica = false;
  output String outPythonScript;
end buildOpenTURNSInterface;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="pythonTemplateFile" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="showFlatModelica" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="outPythonScript">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.runOpenTURNSPythonScript">
          <code interfaceOnly="true">function runOpenTURNSPythonScript
  input String pythonScriptFile;
  output String logOutputFile;
end runOpenTURNSPythonScript;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="pythonScriptFile" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="logOutputFile">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.generateCode">
          <code interfaceOnly="true">function generateCode
  input TypeName className;
  output Boolean success;
end generateCode;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.loadModel">
          <code interfaceOnly="true">function loadModel
  input TypeName className;
  input String[:] priorityVersion = {"default"};
  input Boolean notify = false "Give a notification of the libraries and versions that were loaded";
  input String languageStandard = "" "Override the set language standard. Parse with the given setting, but do not change it permanently.";
  input Boolean requireExactVersion = false "If the version is required to be exact, if there is a uses Modelica(version=\"3.2\"), Modelica 3.2.1 will not match it.";
  output Boolean success;
end loadModel;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="priorityVersion" hasDefault="true">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Boolean" name="notify" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="languageStandard" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="requireExactVersion" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.deleteFile">
          <code interfaceOnly="true">function deleteFile
  input String fileName;
  output Boolean success;
end deleteFile;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.saveModel">
          <code interfaceOnly="true">function saveModel
  input String fileName;
  input TypeName className;
  output Boolean success;
end saveModel;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.saveTotalModel">
          <code interfaceOnly="true">function saveTotalModel
  input String fileName;
  input TypeName className;
  input Boolean stripAnnotations = false;
  input Boolean stripComments = false;
  output Boolean success;
end saveTotalModel;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="stripAnnotations" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="stripComments" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.save">
          <code interfaceOnly="true">function save
  input TypeName className;
  output Boolean success;
end save;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.saveTotalSCode">
          <code interfaceOnly="true"></code>
          <components>
            <input_arguments/>
            <output_arguments/>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.translateGraphics">
          <code interfaceOnly="true">function translateGraphics
  input TypeName className;
  output String result;
end translateGraphics;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.codeToString">
          <code interfaceOnly="true">function codeToString
  input $Code className;
  output String string;
end codeToString;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="string">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.dumpXMLDAE">
          <code interfaceOnly="true">function dumpXMLDAE
  input TypeName className;
  input String translationLevel = "flat" "flat, optimiser, backEnd, or stateSpace";
  input Boolean addOriginalIncidenceMatrix = false;
  input Boolean addSolvingInfo = false;
  input Boolean addMathMLCode = false;
  input Boolean dumpResiduals = false;
  input String fileNamePrefix = "&lt;default&gt;" "this is the className in string form by default";
  input String rewriteRulesFile = "" "the file from where the rewiteRules are read, default is empty which means no rewrite rules";
  output Boolean success "if the function succeeded true/false";
  output String xmlfileName "the Xml file";
end dumpXMLDAE;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="translationLevel" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="addOriginalIncidenceMatrix" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="addSolvingInfo" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="addMathMLCode" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="dumpResiduals" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileNamePrefix" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="rewriteRulesFile" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="xmlfileName">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.convertUnits">
          <code interfaceOnly="true">function convertUnits
  input String s1;
  input String s2;
  output Boolean unitsCompatible;
  output Real scaleFactor;
  output Real offset;
end convertUnits;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="s1" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="s2" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="unitsCompatible">
                <dimensions/>
              </output_argument>
              <output_argument className="Real" name="scaleFactor">
                <dimensions/>
              </output_argument>
              <output_argument className="Real" name="offset">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getDerivedUnits">
          <code interfaceOnly="true">function getDerivedUnits
  input String baseUnit;
  output String[:] derivedUnits;
end getDerivedUnits;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="baseUnit" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="derivedUnits">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.listVariables">
          <code interfaceOnly="true">function listVariables
  output TypeName variables[:];
end listVariables;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.TypeName" name="variables">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.strtok">
          <code interfaceOnly="true">function strtok
  input String string;
  input String token;
  output String[:] strings;
end strtok;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="string" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="token" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="strings">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.stringSplit">
          <code interfaceOnly="true">function stringSplit
  input String string;
  input String token "single character only";
  output String[:] strings;
end stringSplit;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="string" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="token" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="strings">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.stringReplace">
          <code interfaceOnly="true">function stringReplace
  input String str;
  input String source;
  input String target;
  output String res;
end stringReplace;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="str" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="source" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="target" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="res">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.escapeXML">
          <code interfaceOnly="true">function escapeXML
  input String inStr;
  output String outStr;
end escapeXML;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="inStr" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="outStr">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <type id="OpenModelica.Scripting.ExportKind">
          <code interfaceOnly="false">type ExportKind = enumeration(Absyn "Normal Absyn", SCode "Normal SCode", MetaModelicaInterface "A restricted MetaModelica package interface (protected parts are stripped)", Internal "True unparsing of the Absyn");</code>
          <components>
            <enumeration>
              <enumerator name="Absyn" comment="Normal Absyn"/>
              <enumerator name="SCode" comment="Normal SCode"/>
              <enumerator name="MetaModelicaInterface" comment="A restricted MetaModelica package interface (protected parts are stripped)"/>
              <enumerator name="Internal" comment="True unparsing of the Absyn"/>
            </enumeration>
          </components>
          <classes/>
        </type>
        <function id="OpenModelica.Scripting.list">
          <code interfaceOnly="true">function list
  input TypeName class_ = $Code(AllLoadedClasses);
  input Boolean interfaceOnly = false;
  input Boolean shortOnly = false "only short class definitions";
  input ExportKind exportKind = ExportKind.Absyn;
  output String contents;
end list;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="interfaceOnly" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="shortOnly" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.Scripting.ExportKind" name="exportKind" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="contents">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.listFile">
          <code interfaceOnly="true">function listFile
  input TypeName class_;
  output String contents;
end listFile;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="contents">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <type id="OpenModelica.Scripting.DiffFormat">
          <code interfaceOnly="false">type DiffFormat = enumeration(plain "no deletions, no markup", color "terminal escape sequences", xml "XML tags");</code>
          <components>
            <enumeration>
              <enumerator name="plain" comment="no deletions, no markup"/>
              <enumerator name="color" comment="terminal escape sequences"/>
              <enumerator name="xml" comment="XML tags"/>
            </enumeration>
          </components>
          <classes/>
        </type>
        <function id="OpenModelica.Scripting.diffModelicaFileListings">
          <code interfaceOnly="true">function diffModelicaFileListings
  input String before, after;
  input DiffFormat diffFormat = DiffFormat.color;
  output String result;
end diffModelicaFileListings;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="after" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="before" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.Scripting.DiffFormat" name="diffFormat" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.exportToFigaro">
          <code interfaceOnly="true">function exportToFigaro
  input TypeName path;
  input String directory = cd();
  input String database;
  input String mode;
  input String options;
  input String processor;
  output Boolean success;
end exportToFigaro;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="path" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="directory" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="database" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="mode" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="options" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="processor" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.inferBindings">
          <code interfaceOnly="true">function inferBindings
  input TypeName path;
  output Boolean success;
end inferBindings;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="path" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.generateVerificationScenarios">
          <code interfaceOnly="true">function generateVerificationScenarios
  input TypeName path;
  output Boolean success;
end generateVerificationScenarios;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="path" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.rewriteBlockCall">
          <code interfaceOnly="true">function rewriteBlockCall
  input TypeName className;
  input TypeName inDefs;
  output Boolean success;
end rewriteBlockCall;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="inDefs" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.realpath">
          <code interfaceOnly="true">function realpath
  input String name "Absolute or relative file or directory name";
  output String fullName "Full path of 'name'";
end realpath;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="name" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="fullName">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.uriToFilename">
          <code interfaceOnly="true">function uriToFilename
  input String uri;
  output String filename = "";
end uriToFilename;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="uri" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="filename">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getLoadedLibraries">
          <code interfaceOnly="true">function getLoadedLibraries
  output String[:, 2] libraries;
end getLoadedLibraries;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="libraries">
                <dimensions>
                  <dimension>:</dimension>
                  <dimension>2</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <type id="OpenModelica.Scripting.LinearSystemSolver">
          <code interfaceOnly="false">type LinearSystemSolver = enumeration(dgesv, lpsolve55);</code>
          <components>
            <enumeration>
              <enumerator name="dgesv" comment=""/>
              <enumerator name="lpsolve55" comment=""/>
            </enumeration>
          </components>
          <classes/>
        </type>
        <function id="OpenModelica.Scripting.solveLinearSystem">
          <code interfaceOnly="true">function solveLinearSystem
  input Real[size(B, 1), size(B, 1)] A;
  input Real[:] B;
  input LinearSystemSolver solver = LinearSystemSolver.dgesv;
  input Integer[:] isInt = {-1} "list of indices that are integers";
  output Real[size(B, 1)] X;
  output Integer info;
end solveLinearSystem;</code>
          <components>
            <input_arguments>
              <input_argument className="Real" name="A" hasDefault="false">
                <dimensions>
                  <dimension>size(B, 1)</dimension>
                  <dimension>size(B, 1)</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Real" name="B" hasDefault="false">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="OpenModelica.Scripting.LinearSystemSolver" name="solver" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="isInt" hasDefault="true">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Real" name="X">
                <dimensions>
                  <dimension>size(B, 1)</dimension>
                </dimensions>
              </output_argument>
              <output_argument className="Integer" name="info">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <type id="OpenModelica.Scripting.StandardStream">
          <code interfaceOnly="false">type StandardStream = enumeration(stdin, stdout, stderr);</code>
          <components>
            <enumeration>
              <enumerator name="stdin" comment=""/>
              <enumerator name="stdout" comment=""/>
              <enumerator name="stderr" comment=""/>
            </enumeration>
          </components>
          <classes/>
        </type>
        <function id="OpenModelica.Scripting.reopenStandardStream">
          <code interfaceOnly="true">function reopenStandardStream
  input StandardStream _stream;
  input String filename;
  output Boolean success;
end reopenStandardStream;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.Scripting.StandardStream" name="_stream" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.importFMU">
          <code interfaceOnly="true">function importFMU
  input String filename "the fmu file name";
  input String workdir = "&lt;default&gt;" "The output directory for imported FMU files. &lt;default&gt; will put the files to current working directory.";
  input Integer loglevel = 3 "loglevel_nothing=0;loglevel_fatal=1;loglevel_error=2;loglevel_warning=3;loglevel_info=4;loglevel_verbose=5;loglevel_debug=6";
  input Boolean fullPath = false "When true the full output path is returned otherwise only the file name.";
  input Boolean debugLogging = false "When true the FMU's debug output is printed.";
  input Boolean generateInputConnectors = true "When true creates the input connector pins.";
  input Boolean generateOutputConnectors = true "When true creates the output connector pins.";
  output String generatedFileName "Returns the full path of the generated file.";
end importFMU;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="workdir" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="loglevel" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="fullPath" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="debugLogging" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="generateInputConnectors" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="generateOutputConnectors" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="generatedFileName">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.importFMUModelDescription">
          <code interfaceOnly="true">function importFMUModelDescription
  input String filename "the fmu file name";
  input String workdir = "&lt;default&gt;" "The output directory for imported FMU files. &lt;default&gt; will put the files to current working directory.";
  input Integer loglevel = 3 "loglevel_nothing=0;loglevel_fatal=1;loglevel_error=2;loglevel_warning=3;loglevel_info=4;loglevel_verbose=5;loglevel_debug=6";
  input Boolean fullPath = false "When true the full output path is returned otherwise only the file name.";
  input Boolean debugLogging = false "When true the FMU's debug output is printed.";
  input Boolean generateInputConnectors = true "When true creates the input connector pins.";
  input Boolean generateOutputConnectors = true "When true creates the output connector pins.";
  output String generatedFileName "Returns the full path of the generated file.";
end importFMUModelDescription;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="workdir" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="loglevel" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="fullPath" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="debugLogging" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="generateInputConnectors" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="generateOutputConnectors" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="generatedFileName">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.translateModelFMU">
          <code interfaceOnly="true">function translateModelFMU
  input TypeName className "the class that should translated";
  input String version = "2.0" "FMU version, 1.0 or 2.0.";
  input String fmuType = "me" "FMU type, me (model exchange), cs (co-simulation), me_cs (both model exchange and co-simulation)";
  input String fileNamePrefix = "&lt;default&gt;" "fileNamePrefix. &lt;default&gt; = \"className\"";
  input Boolean includeResources = false "include Modelica based resources via loadResource or not";
  output String generatedFileName "Returns the full path of the generated FMU.";
end translateModelFMU;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="version" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fmuType" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileNamePrefix" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="includeResources" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="generatedFileName">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.buildModelFMU">
          <code interfaceOnly="true">function buildModelFMU
  input TypeName className "the class that should translated";
  input String version = "2.0" "FMU version, 1.0 or 2.0.";
  input String fmuType = "me" "FMU type, me (model exchange), cs (co-simulation), me_cs (both model exchange and co-simulation)";
  input String fileNamePrefix = "&lt;default&gt;" "fileNamePrefix. &lt;default&gt; = \"className\"";
  input String platforms[:] = {"static"} "The list of platforms to generate code for. \"dynamic\"=current platform, dynamically link the runtime. \"static\"=current platform, statically link everything. Else, use a host triple, e.g. \"x86_64-linux-gnu\" or \"x86_64-w64-mingw32\"";
  input Boolean includeResources = false "include Modelica based resources via loadResource or not";
  output String generatedFileName "Returns the full path of the generated FMU.";
end buildModelFMU;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="version" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fmuType" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileNamePrefix" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="platforms" hasDefault="true">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Boolean" name="includeResources" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="generatedFileName">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.buildEncryptedPackage">
          <code interfaceOnly="true">function buildEncryptedPackage
  input TypeName className "the class that should encrypted";
  output Boolean success;
  output String commandOutput "Output of the packagetool executable";
end buildEncryptedPackage;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="commandOutput">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.simulate">
          <code interfaceOnly="true">function simulate
  input TypeName className "the class that should simulated";
  input Real startTime = "&lt;default&gt;" "the start time of the simulation. &lt;default&gt; = 0.0";
  input Real stopTime = 1.0 "the stop time of the simulation. &lt;default&gt; = 1.0";
  input Real numberOfIntervals = 500 "number of intervals in the result file. &lt;default&gt; = 500";
  input Real tolerance = 1e-6 "tolerance used by the integration method. &lt;default&gt; = 1e-6";
  input String method = "&lt;default&gt;" "integration method used for simulation. &lt;default&gt; = dassl";
  input String fileNamePrefix = "&lt;default&gt;" "fileNamePrefix. &lt;default&gt; = \"\"";
  input String options = "&lt;default&gt;" "options. &lt;default&gt; = \"\"";
  input String outputFormat = "mat" "Format for the result file. &lt;default&gt; = \"mat\"";
  input String variableFilter = ".*" "Filter for variables that should store in result file. &lt;default&gt; = \".*\"";
  input String cflags = "&lt;default&gt;" "cflags. &lt;default&gt; = \"\"";
  input String simflags = "&lt;default&gt;" "simflags. &lt;default&gt; = \"\"";
  output SimulationResult simulationResults;

  record SimulationResult
    String resultFile;
    String simulationOptions;
    String messages;
    Real timeFrontend;
    Real timeBackend;
    Real timeSimCode;
    Real timeTemplates;
    Real timeCompile;
    Real timeSimulation;
    Real timeTotal;
  end SimulationResult;
end simulate;</code>
          <components>
            <input_arguments/>
            <output_arguments/>
          </components>
          <classes>
            <record id="OpenModelica.Scripting.simulate.SimulationResult">
              <code interfaceOnly="false">record SimulationResult
  String resultFile;
  String simulationOptions;
  String messages;
  Real timeFrontend;
  Real timeBackend;
  Real timeSimCode;
  Real timeTemplates;
  Real timeCompile;
  Real timeSimulation;
  Real timeTotal;
end SimulationResult;</code>
              <components>
                <component className="String" name="resultFile" comment="">
                  <dimensions/>
                </component>
                <component className="String" name="simulationOptions" comment="">
                  <dimensions/>
                </component>
                <component className="String" name="messages" comment="">
                  <dimensions/>
                </component>
                <component className="Real" name="timeFrontend" comment="">
                  <dimensions/>
                </component>
                <component className="Real" name="timeBackend" comment="">
                  <dimensions/>
                </component>
                <component className="Real" name="timeSimCode" comment="">
                  <dimensions/>
                </component>
                <component className="Real" name="timeTemplates" comment="">
                  <dimensions/>
                </component>
                <component className="Real" name="timeCompile" comment="">
                  <dimensions/>
                </component>
                <component className="Real" name="timeSimulation" comment="">
                  <dimensions/>
                </component>
                <component className="Real" name="timeTotal" comment="">
                  <dimensions/>
                </component>
              </components>
              <classes/>
            </record>
          </classes>
        </function>
        <function id="OpenModelica.Scripting.buildModel">
          <code interfaceOnly="true">function buildModel
  input TypeName className "the class that should be built";
  input Real startTime = "&lt;default&gt;" "the start time of the simulation. &lt;default&gt; = 0.0";
  input Real stopTime = 1.0 "the stop time of the simulation. &lt;default&gt; = 1.0";
  input Real numberOfIntervals = 500 "number of intervals in the result file. &lt;default&gt; = 500";
  input Real tolerance = 1e-6 "tolerance used by the integration method. &lt;default&gt; = 1e-6";
  input String method = "&lt;default&gt;" "integration method used for simulation. &lt;default&gt; = dassl";
  input String fileNamePrefix = "&lt;default&gt;" "fileNamePrefix. &lt;default&gt; = \"\"";
  input String options = "&lt;default&gt;" "options. &lt;default&gt; = \"\"";
  input String outputFormat = "mat" "Format for the result file. &lt;default&gt; = \"mat\"";
  input String variableFilter = ".*" "Filter for variables that should store in result file. &lt;default&gt; = \".*\"";
  input String cflags = "&lt;default&gt;" "cflags. &lt;default&gt; = \"\"";
  input String simflags = "&lt;default&gt;" "simflags. &lt;default&gt; = \"\"";
  output String[2] buildModelResults;
end buildModel;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="startTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="stopTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="numberOfIntervals" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="tolerance" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="method" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileNamePrefix" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="options" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="outputFormat" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="variableFilter" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="cflags" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="simflags" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="buildModelResults">
                <dimensions>
                  <dimension>2</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.buildLabel">
          <code interfaceOnly="true">function buildLabel
  input TypeName className "the class that should be built";
  input Real startTime = 0.0 "the start time of the simulation. &lt;default&gt; = 0.0";
  input Real stopTime = 1.0 "the stop time of the simulation. &lt;default&gt; = 1.0";
  input Integer numberOfIntervals = 500 "number of intervals in the result file. &lt;default&gt; = 500";
  input Real tolerance = 1e-6 "tolerance used by the integration method. &lt;default&gt; = 1e-6";
  input String method = "dassl" "integration method used for simulation. &lt;default&gt; = dassl";
  input String fileNamePrefix = "" "fileNamePrefix. &lt;default&gt; = \"\"";
  input String options = "" "options. &lt;default&gt; = \"\"";
  input String outputFormat = "mat" "Format for the result file. &lt;default&gt; = \"mat\"";
  input String variableFilter = ".*" "Filter for variables that should store in result file. &lt;default&gt; = \".*\"";
  input String cflags = "" "cflags. &lt;default&gt; = \"\"";
  input String simflags = "" "simflags. &lt;default&gt; = \"\"";
  output String[2] buildModelResults;
end buildLabel;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="startTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="stopTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="numberOfIntervals" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="tolerance" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="method" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileNamePrefix" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="options" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="outputFormat" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="variableFilter" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="cflags" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="simflags" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="buildModelResults">
                <dimensions>
                  <dimension>2</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.reduceTerms">
          <code interfaceOnly="true">function reduceTerms
  input TypeName className "the class that should be built";
  input Real startTime = 0.0 "the start time of the simulation. &lt;default&gt; = 0.0";
  input Real stopTime = 1.0 "the stop time of the simulation. &lt;default&gt; = 1.0";
  input Integer numberOfIntervals = 500 "number of intervals in the result file. &lt;default&gt; = 500";
  input Real tolerance = 1e-6 "tolerance used by the integration method. &lt;default&gt; = 1e-6";
  input String method = "dassl" "integration method used for simulation. &lt;default&gt; = dassl";
  input String fileNamePrefix = "" "fileNamePrefix. &lt;default&gt; = \"\"";
  input String options = "" "options. &lt;default&gt; = \"\"";
  input String outputFormat = "mat" "Format for the result file. &lt;default&gt; = \"mat\"";
  input String variableFilter = ".*" "Filter for variables that should store in result file. &lt;default&gt; = \".*\"";
  input String cflags = "" "cflags. &lt;default&gt; = \"\"";
  input String simflags = "" "simflags. &lt;default&gt; = \"\"";
  input String labelstoCancel = "";
  output String[2] buildModelResults;
end reduceTerms;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="startTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="stopTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="numberOfIntervals" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="tolerance" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="method" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileNamePrefix" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="options" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="outputFormat" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="variableFilter" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="cflags" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="simflags" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="labelstoCancel" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="buildModelResults">
                <dimensions>
                  <dimension>2</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.moveClass">
          <code interfaceOnly="true">function moveClass
  input TypeName className "the class that should be moved";
  input Integer offset "Offset in the class list.";
  output Boolean result;
end moveClass;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="offset" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.moveClassToTop">
          <code interfaceOnly="true">function moveClassToTop
  input TypeName className;
  output Boolean result;
end moveClassToTop;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.moveClassToBottom">
          <code interfaceOnly="true">function moveClassToBottom
  input TypeName className;
  output Boolean result;
end moveClassToBottom;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.copyClass">
          <code interfaceOnly="true">function copyClass
  input TypeName className "the class that should be copied";
  input String newClassName "the name for new class";
  input TypeName withIn = $Code(TopLevel) "the with in path for new class";
  output Boolean result;
end copyClass;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="newClassName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="withIn" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.linearize">
          <code interfaceOnly="true">function linearize
  input TypeName className "the class that should simulated";
  input Real startTime = "&lt;default&gt;" "the start time of the simulation. &lt;default&gt; = 0.0";
  input Real stopTime = 1.0 "the stop time of the simulation. &lt;default&gt; = 1.0";
  input Real numberOfIntervals = 500 "number of intervals in the result file. &lt;default&gt; = 500";
  input Real stepSize = 0.002 "step size that is used for the result file. &lt;default&gt; = 0.002";
  input Real tolerance = 1e-6 "tolerance used by the integration method. &lt;default&gt; = 1e-6";
  input String method = "&lt;default&gt;" "integration method used for simulation. &lt;default&gt; = dassl";
  input String fileNamePrefix = "&lt;default&gt;" "fileNamePrefix. &lt;default&gt; = \"\"";
  input Boolean storeInTemp = false "storeInTemp. &lt;default&gt; = false";
  input Boolean noClean = false "noClean. &lt;default&gt; = false";
  input String options = "&lt;default&gt;" "options. &lt;default&gt; = \"\"";
  input String outputFormat = "mat" "Format for the result file. &lt;default&gt; = \"mat\"";
  input String variableFilter = ".*" "Filter for variables that should store in result file. &lt;default&gt; = \".*\"";
  input String cflags = "&lt;default&gt;" "cflags. &lt;default&gt; = \"\"";
  input String simflags = "&lt;default&gt;" "simflags. &lt;default&gt; = \"\"";
  output String linearizationResult;
end linearize;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="startTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="stopTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="numberOfIntervals" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="stepSize" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="tolerance" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="method" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileNamePrefix" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="storeInTemp" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="noClean" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="options" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="outputFormat" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="variableFilter" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="cflags" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="simflags" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="linearizationResult">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.optimize">
          <code interfaceOnly="true">function optimize
  input TypeName className "the class that should simulated";
  input Real startTime = "&lt;default&gt;" "the start time of the simulation. &lt;default&gt; = 0.0";
  input Real stopTime = 1.0 "the stop time of the simulation. &lt;default&gt; = 1.0";
  input Real numberOfIntervals = 500 "number of intervals in the result file. &lt;default&gt; = 500";
  input Real stepSize = 0.002 "step size that is used for the result file. &lt;default&gt; = 0.002";
  input Real tolerance = 1e-6 "tolerance used by the integration method. &lt;default&gt; = 1e-6";
  input String method = DAE.SCONST("optimization") "optimize a modelica/optimica model.";
  input String fileNamePrefix = "&lt;default&gt;" "fileNamePrefix. &lt;default&gt; = \"\"";
  input Boolean storeInTemp = false "storeInTemp. &lt;default&gt; = false";
  input Boolean noClean = false "noClean. &lt;default&gt; = false";
  input String options = "&lt;default&gt;" "options. &lt;default&gt; = \"\"";
  input String outputFormat = "mat" "Format for the result file. &lt;default&gt; = \"mat\"";
  input String variableFilter = ".*" "Filter for variables that should store in result file. &lt;default&gt; = \".*\"";
  input String cflags = "&lt;default&gt;" "cflags. &lt;default&gt; = \"\"";
  input String simflags = "&lt;default&gt;" "simflags. &lt;default&gt; = \"\"";
  output String optimizationResults;
end optimize;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="startTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="stopTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="numberOfIntervals" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="stepSize" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="tolerance" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="method" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileNamePrefix" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="storeInTemp" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="noClean" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="options" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="outputFormat" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="variableFilter" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="cflags" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="simflags" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="optimizationResults">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getSourceFile">
          <code interfaceOnly="true">function getSourceFile
  input TypeName class_;
  output String filename "empty on failure";
end getSourceFile;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="filename">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setSourceFile">
          <code interfaceOnly="true">function setSourceFile
  input TypeName class_;
  input String filename;
  output Boolean success;
end setSourceFile;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isShortDefinition">
          <code interfaceOnly="true">function isShortDefinition
  input TypeName class_;
  output Boolean isShortCls;
end isShortDefinition;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="isShortCls">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setClassComment">
          <code interfaceOnly="true">function setClassComment
  input TypeName class_;
  input String filename;
  output Boolean success;
end setClassComment;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getClassNames">
          <code interfaceOnly="true">function getClassNames
  input TypeName class_ = $Code(AllLoadedClasses);
  input Boolean recursive = false;
  input Boolean qualified = false;
  input Boolean sort = false;
  input Boolean builtin = false "List also builtin classes if true";
  input Boolean showProtected = false "List also protected classes if true";
  input Boolean includeConstants = false "List also constants in the class if true";
  output TypeName classNames[:];
end getClassNames;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="recursive" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="qualified" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="sort" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="builtin" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="showProtected" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="includeConstants" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.TypeName" name="classNames">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getUsedClassNames">
          <code interfaceOnly="true">function getUsedClassNames
  input TypeName className;
  output TypeName classNames[:];
end getUsedClassNames;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.TypeName" name="classNames">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getPackages">
          <code interfaceOnly="true">function getPackages
  input TypeName class_ = $Code(AllLoadedClasses);
  output TypeName classNames[:];
end getPackages;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.TypeName" name="classNames">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.basePlotFunction">
          <code interfaceOnly="true">partial function basePlotFunction
  input String fileName = "&lt;default&gt;" "The filename containing the variables. &lt;default&gt; will read the last simulation result";
  input String interpolation = "linear" "
      Determines if the simulation data should be interpolated to allow drawing of continuous lines in the diagram.
      \"linear\" results in linear interpolation between data points, \"constant\" keeps the value of the last known
      data point until a new one is found and \"none\" results in a diagram where only known data points are plotted.";
  input String title = "Plot by OpenModelica" "This text will be used as the diagram title.";
  input Boolean legend = true "Determines whether or not the variable legend is shown.";
  input Boolean grid = true "Determines whether or not a grid is shown in the diagram.";
  input Boolean logX = false "Determines whether or not the horizontal axis is logarithmically scaled.";
  input Boolean logY = false "Determines whether or not the vertical axis is logarithmically scaled.";
  input String xLabel = "time" "This text will be used as the horizontal label in the diagram.";
  input String yLabel = "" "This text will be used as the vertical label in the diagram.";
  input Boolean points = false "Determines whether or not the data points should be indicated by a dot in the diagram.";
  input Real xRange[2] = {0.0, 0.0} "Determines the horizontal interval that is visible in the diagram. {0,0} will select a suitable range.";
  input Real yRange[2] = {0.0, 0.0} "Determines the vertical interval that is visible in the diagram. {0,0} will select a suitable range.";
  output Boolean success "Returns true on success";
end basePlotFunction;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="interpolation" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="title" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="legend" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="grid" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="logX" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="logY" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="xLabel" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="yLabel" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="points" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="xRange" hasDefault="true">
                <dimensions>
                  <dimension>2</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Real" name="yRange" hasDefault="true">
                <dimensions>
                  <dimension>2</dimension>
                </dimensions>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.plot">
          <code interfaceOnly="true">function plot
  input VariableNames vars "The variables you want to plot";
  input Boolean externalWindow = false "Opens the plot in a new plot window";
  input String fileName = "&lt;default&gt;" "The filename containing the variables. &lt;default&gt; will read the last simulation result";
  input String title = "" "This text will be used as the diagram title.";
  input String grid = "detailed" "Sets the grid for the plot i.e simple, detailed, none.";
  input Boolean logX = false "Determines whether or not the horizontal axis is logarithmically scaled.";
  input Boolean logY = false "Determines whether or not the vertical axis is logarithmically scaled.";
  input String xLabel = "time" "This text will be used as the horizontal label in the diagram.";
  input String yLabel = "" "This text will be used as the vertical label in the diagram.";
  input Real xRange[2] = {0.0, 0.0} "Determines the horizontal interval that is visible in the diagram. {0,0} will select a suitable range.";
  input Real yRange[2] = {0.0, 0.0} "Determines the vertical interval that is visible in the diagram. {0,0} will select a suitable range.";
  input Real curveWidth = 1.0 "Sets the width of the curve.";
  input Integer curveStyle = 1 "Sets the style of the curve. SolidLine=1, DashLine=2, DotLine=3, DashDotLine=4, DashDotDotLine=5, Sticks=6, Steps=7.";
  input String legendPosition = "top" "Sets the POSITION of the legend i.e left, right, top, bottom, none.";
  input String footer = "" "This text will be used as the diagram footer.";
  input Boolean autoScale = true "Use auto scale while plotting.";
  input Boolean forceOMPlot = false "if true launches OMPlot and doesn't call callback function even if it is defined.";
  output Boolean success "Returns true on success";
end plot;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.VariableNames" name="vars" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="externalWindow" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileName" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="title" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="grid" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="logX" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="logY" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="xLabel" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="yLabel" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="xRange" hasDefault="true">
                <dimensions>
                  <dimension>2</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Real" name="yRange" hasDefault="true">
                <dimensions>
                  <dimension>2</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Real" name="curveWidth" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="curveStyle" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="legendPosition" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="footer" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="autoScale" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="forceOMPlot" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.plotAll">
          <code interfaceOnly="true">function plotAll
  input Boolean externalWindow = false "Opens the plot in a new plot window";
  input String fileName = "&lt;default&gt;" "The filename containing the variables. &lt;default&gt; will read the last simulation result";
  input String title = "" "This text will be used as the diagram title.";
  input String grid = "detailed" "Sets the grid for the plot i.e simple, detailed, none.";
  input Boolean logX = false "Determines whether or not the horizontal axis is logarithmically scaled.";
  input Boolean logY = false "Determines whether or not the vertical axis is logarithmically scaled.";
  input String xLabel = "time" "This text will be used as the horizontal label in the diagram.";
  input String yLabel = "" "This text will be used as the vertical label in the diagram.";
  input Real xRange[2] = {0.0, 0.0} "Determines the horizontal interval that is visible in the diagram. {0,0} will select a suitable range.";
  input Real yRange[2] = {0.0, 0.0} "Determines the vertical interval that is visible in the diagram. {0,0} will select a suitable range.";
  input Real curveWidth = 1.0 "Sets the width of the curve.";
  input Integer curveStyle = 1 "Sets the style of the curve. SolidLine=1, DashLine=2, DotLine=3, DashDotLine=4, DashDotDotLine=5, Sticks=6, Steps=7.";
  input String legendPosition = "top" "Sets the POSITION of the legend i.e left, right, top, bottom, none.";
  input String footer = "" "This text will be used as the diagram footer.";
  input Boolean autoScale = true "Use auto scale while plotting.";
  input Boolean forceOMPlot = false "if true launches OMPlot and doesn't call callback function even if it is defined.";
  output Boolean success "Returns true on success";
end plotAll;</code>
          <components>
            <input_arguments>
              <input_argument className="Boolean" name="externalWindow" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileName" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="title" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="grid" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="logX" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="logY" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="xLabel" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="yLabel" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="xRange" hasDefault="true">
                <dimensions>
                  <dimension>2</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Real" name="yRange" hasDefault="true">
                <dimensions>
                  <dimension>2</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Real" name="curveWidth" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="curveStyle" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="legendPosition" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="footer" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="autoScale" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="forceOMPlot" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.plotParametric">
          <code interfaceOnly="true">function plotParametric
  input VariableName xVariable;
  input VariableName yVariable;
  input Boolean externalWindow = false "Opens the plot in a new plot window";
  input String fileName = "&lt;default&gt;" "The filename containing the variables. &lt;default&gt; will read the last simulation result";
  input String title = "" "This text will be used as the diagram title.";
  input String grid = "detailed" "Sets the grid for the plot i.e simple, detailed, none.";
  input Boolean logX = false "Determines whether or not the horizontal axis is logarithmically scaled.";
  input Boolean logY = false "Determines whether or not the vertical axis is logarithmically scaled.";
  input String xLabel = "time" "This text will be used as the horizontal label in the diagram.";
  input String yLabel = "" "This text will be used as the vertical label in the diagram.";
  input Real xRange[2] = {0.0, 0.0} "Determines the horizontal interval that is visible in the diagram. {0,0} will select a suitable range.";
  input Real yRange[2] = {0.0, 0.0} "Determines the vertical interval that is visible in the diagram. {0,0} will select a suitable range.";
  input Real curveWidth = 1.0 "Sets the width of the curve.";
  input Integer curveStyle = 1 "Sets the style of the curve. SolidLine=1, DashLine=2, DotLine=3, DashDotLine=4, DashDotDotLine=5, Sticks=6, Steps=7.";
  input String legendPosition = "top" "Sets the POSITION of the legend i.e left, right, top, bottom, none.";
  input String footer = "" "This text will be used as the diagram footer.";
  input Boolean autoScale = true "Use auto scale while plotting.";
  input Boolean forceOMPlot = false "if true launches OMPlot and doesn't call callback function even if it is defined.";
  output Boolean success "Returns true on success";
end plotParametric;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.VariableName" name="xVariable" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.VariableName" name="yVariable" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="externalWindow" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileName" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="title" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="grid" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="logX" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="logY" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="xLabel" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="yLabel" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="xRange" hasDefault="true">
                <dimensions>
                  <dimension>2</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Real" name="yRange" hasDefault="true">
                <dimensions>
                  <dimension>2</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Real" name="curveWidth" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="curveStyle" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="legendPosition" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="footer" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="autoScale" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="forceOMPlot" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.readSimulationResult">
          <code interfaceOnly="true">function readSimulationResult
  input String filename;
  input VariableNames variables;
  input Integer size = 0 "0=read any size... If the size is not the same as the result-file, this function fails";
  output Real result[:, :];
end readSimulationResult;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.VariableNames" name="variables" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="size" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Real" name="result">
                <dimensions>
                  <dimension>:</dimension>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.readSimulationResultSize">
          <code interfaceOnly="true">function readSimulationResultSize
  input String fileName;
  output Integer sz;
end readSimulationResultSize;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="sz">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.readSimulationResultVars">
          <code interfaceOnly="true">function readSimulationResultVars
  input String fileName;
  input Boolean readParameters = true;
  input Boolean openmodelicaStyle = false;
  output String[:] vars;
end readSimulationResultVars;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="readParameters" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="openmodelicaStyle" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="vars">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.filterSimulationResults">
          <code interfaceOnly="true">function filterSimulationResults
  input String inFile;
  input String outFile;
  input String[:] vars;
  input Integer numberOfIntervals = 0 "0=Do not resample";
  input Boolean removeDescription = false;
  output Boolean success;
end filterSimulationResults;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="inFile" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="outFile" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="vars" hasDefault="false">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Integer" name="numberOfIntervals" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="removeDescription" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.compareSimulationResults">
          <code interfaceOnly="true">function compareSimulationResults
  input String filename;
  input String reffilename;
  input String logfilename;
  input Real relTol = 0.01;
  input Real absTol = 0.0001;
  input String[:] vars = fill("", 0);
  output String[:] result;
end compareSimulationResults;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="reffilename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="logfilename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="relTol" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="absTol" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="vars" hasDefault="true">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.deltaSimulationResults">
          <code interfaceOnly="true">function deltaSimulationResults
  input String filename;
  input String reffilename;
  input String method "method to compute then error. choose 1norm, 2norm, maxerr";
  input String[:] vars = fill("", 0);
  output Real result;
end deltaSimulationResults;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="reffilename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="method" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="vars" hasDefault="true">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Real" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.diffSimulationResults">
          <code interfaceOnly="true">function diffSimulationResults
  input String actualFile;
  input String expectedFile;
  input String diffPrefix;
  input Real relTol = 1e-3 "y tolerance";
  input Real relTolDiffMinMax = 1e-4 "y tolerance based on the difference between the maximum and minimum of the signal";
  input Real rangeDelta = 0.002 "x tolerance";
  input String[:] vars = fill("", 0);
  input Boolean keepEqualResults = false;
  output Boolean success;
  output String[:] failVars;
end diffSimulationResults;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="actualFile" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="expectedFile" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="diffPrefix" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="relTol" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="relTolDiffMinMax" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="rangeDelta" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="vars" hasDefault="true">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Boolean" name="keepEqualResults" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="failVars">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.diffSimulationResultsHtml">
          <code interfaceOnly="true">function diffSimulationResultsHtml
  input String var;
  input String actualFile;
  input String expectedFile;
  input Real relTol = 1e-3 "y tolerance";
  input Real relTolDiffMinMax = 1e-4 "y tolerance based on the difference between the maximum and minimum of the signal";
  input Real rangeDelta = 0.002 "x tolerance";
  output String html;
end diffSimulationResultsHtml;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="var" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="actualFile" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="expectedFile" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="relTol" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="relTolDiffMinMax" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="rangeDelta" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="html">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.checkTaskGraph">
          <code interfaceOnly="true">function checkTaskGraph
  input String filename;
  input String reffilename;
  output String[:] result;
end checkTaskGraph;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="filename" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="reffilename" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.checkCodeGraph">
          <code interfaceOnly="true">function checkCodeGraph
  input String graphfile;
  input String codefile;
  output String[:] result;
end checkCodeGraph;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="graphfile" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="codefile" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.val">
          <code interfaceOnly="true">function val
  input VariableName var;
  input Real timePoint = 0.0;
  input String fileName = "&lt;default&gt;" "The contents of the currentSimulationResult variable";
  output Real valAtTime;
end val;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.VariableName" name="var" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="timePoint" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="fileName" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Real" name="valAtTime">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.closeSimulationResultFile">
          <code interfaceOnly="true">function closeSimulationResultFile
  output Boolean success;
end closeSimulationResultFile;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.addClassAnnotation">
          <code interfaceOnly="true">function addClassAnnotation
  input TypeName class_;
  input ExpressionOrModification annotate;
  output Boolean bool;
end addClassAnnotation;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.ExpressionOrModification" name="annotate" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="bool">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getParameterNames">
          <code interfaceOnly="true">function getParameterNames
  input TypeName class_;
  output String[:] parameters;
end getParameterNames;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="parameters">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getParameterValue">
          <code interfaceOnly="true">function getParameterValue
  input TypeName class_;
  input String parameterName;
  output String parameterValue;
end getParameterValue;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="parameterName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="parameterValue">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getComponentModifierNames">
          <code interfaceOnly="true">function getComponentModifierNames
  input TypeName class_;
  input String componentName;
  output String[:] modifiers;
end getComponentModifierNames;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="componentName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="modifiers">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getComponentModifierValue">
          <code interfaceOnly="true">function getComponentModifierValue
  input TypeName class_;
  input TypeName modifier;
  output String value;
end getComponentModifierValue;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="modifier" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="value">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getComponentModifierValues">
          <code interfaceOnly="true">function getComponentModifierValues
  input TypeName class_;
  input TypeName modifier;
  output String value;
end getComponentModifierValues;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="modifier" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="value">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getInstantiatedParametersAndValues">
          <code interfaceOnly="true">function getInstantiatedParametersAndValues
  input TypeName cls;
  output String[:] values;
end getInstantiatedParametersAndValues;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cls" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="values">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.removeComponentModifiers">
          <code interfaceOnly="true">function removeComponentModifiers
  input TypeName class_;
  input String componentName;
  input Boolean keepRedeclares = false;
  output Boolean success;
end removeComponentModifiers;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="componentName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="keepRedeclares" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.removeExtendsModifiers">
          <code interfaceOnly="true">function removeExtendsModifiers
  input TypeName className;
  input TypeName baseClassName;
  input Boolean keepRedeclares = false;
  output Boolean success;
end removeExtendsModifiers;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="baseClassName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="keepRedeclares" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getConnectionCount">
          <code interfaceOnly="true">function getConnectionCount
  input TypeName className;
  output Integer count;
end getConnectionCount;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="count">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNthConnection">
          <code interfaceOnly="true">function getNthConnection
  input TypeName className;
  input Integer index;
  output String[:] result;
end getNthConnection;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="index" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getAlgorithmCount">
          <code interfaceOnly="true">function getAlgorithmCount
  input TypeName class_;
  output Integer count;
end getAlgorithmCount;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="count">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNthAlgorithm">
          <code interfaceOnly="true">function getNthAlgorithm
  input TypeName class_;
  input Integer index;
  output String result;
end getNthAlgorithm;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="index" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getInitialAlgorithmCount">
          <code interfaceOnly="true">function getInitialAlgorithmCount
  input TypeName class_;
  output Integer count;
end getInitialAlgorithmCount;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="count">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNthInitialAlgorithm">
          <code interfaceOnly="true">function getNthInitialAlgorithm
  input TypeName class_;
  input Integer index;
  output String result;
end getNthInitialAlgorithm;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="index" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getAlgorithmItemsCount">
          <code interfaceOnly="true">function getAlgorithmItemsCount
  input TypeName class_;
  output Integer count;
end getAlgorithmItemsCount;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="count">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNthAlgorithmItem">
          <code interfaceOnly="true">function getNthAlgorithmItem
  input TypeName class_;
  input Integer index;
  output String result;
end getNthAlgorithmItem;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="index" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getInitialAlgorithmItemsCount">
          <code interfaceOnly="true">function getInitialAlgorithmItemsCount
  input TypeName class_;
  output Integer count;
end getInitialAlgorithmItemsCount;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="count">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNthInitialAlgorithmItem">
          <code interfaceOnly="true">function getNthInitialAlgorithmItem
  input TypeName class_;
  input Integer index;
  output String result;
end getNthInitialAlgorithmItem;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="index" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getEquationCount">
          <code interfaceOnly="true">function getEquationCount
  input TypeName class_;
  output Integer count;
end getEquationCount;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="count">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNthEquation">
          <code interfaceOnly="true">function getNthEquation
  input TypeName class_;
  input Integer index;
  output String result;
end getNthEquation;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="index" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getInitialEquationCount">
          <code interfaceOnly="true">function getInitialEquationCount
  input TypeName class_;
  output Integer count;
end getInitialEquationCount;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="count">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNthInitialEquation">
          <code interfaceOnly="true">function getNthInitialEquation
  input TypeName class_;
  input Integer index;
  output String result;
end getNthInitialEquation;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="index" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getEquationItemsCount">
          <code interfaceOnly="true">function getEquationItemsCount
  input TypeName class_;
  output Integer count;
end getEquationItemsCount;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="count">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNthEquationItem">
          <code interfaceOnly="true">function getNthEquationItem
  input TypeName class_;
  input Integer index;
  output String result;
end getNthEquationItem;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="index" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getInitialEquationItemsCount">
          <code interfaceOnly="true">function getInitialEquationItemsCount
  input TypeName class_;
  output Integer count;
end getInitialEquationItemsCount;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="count">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNthInitialEquationItem">
          <code interfaceOnly="true">function getNthInitialEquationItem
  input TypeName class_;
  input Integer index;
  output String result;
end getNthInitialEquationItem;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="index" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getAnnotationCount">
          <code interfaceOnly="true">function getAnnotationCount
  input TypeName class_;
  output Integer count;
end getAnnotationCount;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="count">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNthAnnotationString">
          <code interfaceOnly="true">function getNthAnnotationString
  input TypeName class_;
  input Integer index;
  output String result;
end getNthAnnotationString;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="index" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getImportCount">
          <code interfaceOnly="true">function getImportCount
  input TypeName class_;
  output Integer count;
end getImportCount;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Integer" name="count">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getNthImport">
          <code interfaceOnly="true">function getNthImport
  input TypeName class_;
  input Integer index;
  output String out[3] "{\"Path\",\"Id\",\"Kind\"}";
end getNthImport;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="index" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="out">
                <dimensions>
                  <dimension>3</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.iconv">
          <code interfaceOnly="true">function iconv
  input String string;
  input String from;
  input String to = "UTF-8";
  output String result;
end iconv;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="string" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="from" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="to" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getDocumentationAnnotation">
          <code interfaceOnly="true">function getDocumentationAnnotation
  input TypeName cl;
  output String out[3] "{info,revision,infoHeader} TODO: Should be changed to have 2 outputs instead of an array of 2 Strings...";
end getDocumentationAnnotation;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="out">
                <dimensions>
                  <dimension>3</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setDocumentationAnnotation">
          <code interfaceOnly="true">function setDocumentationAnnotation
  input TypeName class_;
  input String info = "";
  input String revisions = "";
  output Boolean bool;
end setDocumentationAnnotation;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="class_" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="info" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="revisions" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="bool">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getTimeStamp">
          <code interfaceOnly="true">function getTimeStamp
  input TypeName cl;
  output Real timeStamp;
  output String timeStampAsString;
end getTimeStamp;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Real" name="timeStamp">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="timeStampAsString">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.stringTypeName">
          <code interfaceOnly="true">function stringTypeName
  input String str;
  output TypeName cl;
end stringTypeName;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="str" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.TypeName" name="cl">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.stringVariableName">
          <code interfaceOnly="true">function stringVariableName
  input String str;
  output VariableName cl;
end stringVariableName;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="str" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.VariableName" name="cl">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.typeNameString">
          <code interfaceOnly="true">function typeNameString
  input TypeName cl;
  output String out;
end typeNameString;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="out">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.typeNameStrings">
          <code interfaceOnly="true">function typeNameStrings
  input TypeName cl;
  output String out[:];
end typeNameStrings;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="out">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getClassComment">
          <code interfaceOnly="true">function getClassComment
  input TypeName cl;
  output String comment;
end getClassComment;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="comment">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.dirname">
          <code interfaceOnly="true">function dirname
  input String path;
  output String dirname;
end dirname;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="path" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="dirname">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.basename">
          <code interfaceOnly="true">function basename
  input String path;
  output String basename;
end basename;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="path" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="basename">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getClassRestriction">
          <code interfaceOnly="true">function getClassRestriction
  input TypeName cl;
  output String restriction;
end getClassRestriction;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="restriction">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isType">
          <code interfaceOnly="true">function isType
  input TypeName cl;
  output Boolean b;
end isType;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isPackage">
          <code interfaceOnly="true">function isPackage
  input TypeName cl;
  output Boolean b;
end isPackage;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isClass">
          <code interfaceOnly="true">function isClass
  input TypeName cl;
  output Boolean b;
end isClass;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isRecord">
          <code interfaceOnly="true">function isRecord
  input TypeName cl;
  output Boolean b;
end isRecord;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isBlock">
          <code interfaceOnly="true">function isBlock
  input TypeName cl;
  output Boolean b;
end isBlock;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isFunction">
          <code interfaceOnly="true">function isFunction
  input TypeName cl;
  output Boolean b;
end isFunction;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isPartial">
          <code interfaceOnly="true">function isPartial
  input TypeName cl;
  output Boolean b;
end isPartial;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isModel">
          <code interfaceOnly="true">function isModel
  input TypeName cl;
  output Boolean b;
end isModel;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isConnector">
          <code interfaceOnly="true">function isConnector
  input TypeName cl;
  output Boolean b;
end isConnector;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isOptimization">
          <code interfaceOnly="true">function isOptimization
  input TypeName cl;
  output Boolean b;
end isOptimization;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isEnumeration">
          <code interfaceOnly="true">function isEnumeration
  input TypeName cl;
  output Boolean b;
end isEnumeration;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isOperator">
          <code interfaceOnly="true">function isOperator
  input TypeName cl;
  output Boolean b;
end isOperator;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isOperatorRecord">
          <code interfaceOnly="true">function isOperatorRecord
  input TypeName cl;
  output Boolean b;
end isOperatorRecord;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isOperatorFunction">
          <code interfaceOnly="true">function isOperatorFunction
  input TypeName cl;
  output Boolean b;
end isOperatorFunction;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.isProtectedClass">
          <code interfaceOnly="true">function isProtectedClass
  input TypeName cl;
  input String c2;
  output Boolean b;
end isProtectedClass;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="c2" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="b">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getBuiltinType">
          <code interfaceOnly="true">function getBuiltinType
  input TypeName cl;
  output String name;
end getBuiltinType;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="name">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.setInitXmlStartValue">
          <code interfaceOnly="true">function setInitXmlStartValue
  input String fileName;
  input String variableName;
  input String startValue;
  input String outputFile;
  output Boolean success = false;
end setInitXmlStartValue;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="variableName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="startValue" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="outputFile" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.ngspicetoModelica">
          <code interfaceOnly="true">function ngspicetoModelica
  input String netlistfileName;
  output Boolean success = false;
end ngspicetoModelica;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="netlistfileName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getInheritedClasses">
          <code interfaceOnly="true">function getInheritedClasses
  input TypeName name;
  output TypeName inheritedClasses[:];
end getInheritedClasses;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="name" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.TypeName" name="inheritedClasses">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getComponentsTest">
          <code interfaceOnly="true">function getComponentsTest
  input TypeName name;
  output Component[:] components;

  record Component
    String className;
    // when building record the constructor. Records are allowed to contain only components of basic types, arrays of basic types or other records.
    String name;
    String comment;
    Boolean isProtected;
    Boolean isFinal;
    Boolean isFlow;
    Boolean isStream;
    Boolean isReplaceable;
    String variability "'constant', 'parameter', 'discrete', ''";
    String innerOuter "'inner', 'outer', ''";
    String inputOutput "'input', 'output', ''";
    String dimensions[:];
  end Component;
end getComponentsTest;</code>
          <components>
            <input_arguments/>
            <output_arguments/>
          </components>
          <classes>
            <record id="OpenModelica.Scripting.getComponentsTest.Component">
              <code interfaceOnly="false">record Component
  String className;
  // when building record the constructor. Records are allowed to contain only components of basic types, arrays of basic types or other records.
  String name;
  String comment;
  Boolean isProtected;
  Boolean isFinal;
  Boolean isFlow;
  Boolean isStream;
  Boolean isReplaceable;
  String variability "'constant', 'parameter', 'discrete', ''";
  String innerOuter "'inner', 'outer', ''";
  String inputOutput "'input', 'output', ''";
  String dimensions[:];
end Component;</code>
              <components>
                <component className="String" name="className" comment="">
                  <dimensions/>
                </component>
                <component className="String" name="name" comment="">
                  <dimensions/>
                </component>
                <component className="String" name="comment" comment="">
                  <dimensions/>
                </component>
                <component className="Boolean" name="isProtected" comment="">
                  <dimensions/>
                </component>
                <component className="Boolean" name="isFinal" comment="">
                  <dimensions/>
                </component>
                <component className="Boolean" name="isFlow" comment="">
                  <dimensions/>
                </component>
                <component className="Boolean" name="isStream" comment="">
                  <dimensions/>
                </component>
                <component className="Boolean" name="isReplaceable" comment="">
                  <dimensions/>
                </component>
                <component className="String" name="variability" comment="'constant', 'parameter', 'discrete', ''">
                  <dimensions/>
                </component>
                <component className="String" name="innerOuter" comment="'inner', 'outer', ''">
                  <dimensions/>
                </component>
                <component className="String" name="inputOutput" comment="'input', 'output', ''">
                  <dimensions/>
                </component>
                <component className="String" name="dimensions" comment="">
                  <dimensions>
                    <dimension>:</dimension>
                  </dimensions>
                </component>
              </components>
              <classes/>
            </record>
          </classes>
        </function>
        <function id="OpenModelica.Scripting.isExperiment">
          <code interfaceOnly="true">function isExperiment
  input TypeName name;
  output Boolean res;
end isExperiment;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="name" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="res">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getSimulationOptions">
          <code interfaceOnly="true">function getSimulationOptions
  input TypeName name;
  input Real defaultStartTime = 0.0;
  input Real defaultStopTime = 1.0;
  input Real defaultTolerance = 1e-6;
  input Integer defaultNumberOfIntervals = 500 "May be overridden by defining defaultInterval instead";
  input Real defaultInterval = 0.0 "If = 0.0, then numberOfIntervals is used to calculate the step size";
  output Real startTime;
  output Real stopTime;
  output Real tolerance;
  output Integer numberOfIntervals;
  output Real interval;
end getSimulationOptions;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="name" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="defaultStartTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="defaultStopTime" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="defaultTolerance" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="defaultNumberOfIntervals" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Real" name="defaultInterval" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Real" name="startTime">
                <dimensions/>
              </output_argument>
              <output_argument className="Real" name="stopTime">
                <dimensions/>
              </output_argument>
              <output_argument className="Real" name="tolerance">
                <dimensions/>
              </output_argument>
              <output_argument className="Integer" name="numberOfIntervals">
                <dimensions/>
              </output_argument>
              <output_argument className="Real" name="interval">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getAnnotationNamedModifiers">
          <code interfaceOnly="true">function getAnnotationNamedModifiers
  input TypeName name;
  input String vendorannotation;
  output String[:] modifiernamelist;
end getAnnotationNamedModifiers;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="name" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="vendorannotation" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="modifiernamelist">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getAnnotationModifierValue">
          <code interfaceOnly="true">function getAnnotationModifierValue
  input TypeName name;
  input String vendorannotation;
  input String modifiername;
  output String modifiernamevalue;
end getAnnotationModifierValue;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="name" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="vendorannotation" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="modifiername" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="modifiernamevalue">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.classAnnotationExists">
          <code interfaceOnly="true">function classAnnotationExists
  input TypeName className;
  input TypeName annotationName;
  output Boolean exists;
end classAnnotationExists;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="annotationName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="exists">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getBooleanClassAnnotation">
          <code interfaceOnly="true">function getBooleanClassAnnotation
  input TypeName className;
  input TypeName annotationName;
  output Boolean value;
end getBooleanClassAnnotation;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="annotationName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="value">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.extendsFrom">
          <code interfaceOnly="true">function extendsFrom
  input TypeName className;
  input TypeName baseClassName;
  output Boolean res;
end extendsFrom;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="baseClassName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="res">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.loadModelica3D">
          <code interfaceOnly="true">function loadModelica3D
  input String version = "3.2.1";
  output Boolean status;
end loadModelica3D;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="version" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="status">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.searchClassNames">
          <code interfaceOnly="true">function searchClassNames
  input String searchText;
  input Boolean findInText = false;
  output TypeName classNames[:];
end searchClassNames;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="searchText" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="findInText" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="OpenModelica.$Code.TypeName" name="classNames">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getAvailableLibraries">
          <code interfaceOnly="true">function getAvailableLibraries
  output String[:] libraries;
end getAvailableLibraries;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="String" name="libraries">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getUses">
          <code interfaceOnly="true">function getUses
  input TypeName pack;
  output String[:, :] uses;
end getUses;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="pack" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="uses">
                <dimensions>
                  <dimension>:</dimension>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getDerivedClassModifierNames">
          <code interfaceOnly="true">function getDerivedClassModifierNames
  input TypeName className;
  output String[:] modifierNames;
end getDerivedClassModifierNames;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="modifierNames">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getDerivedClassModifierValue">
          <code interfaceOnly="true">function getDerivedClassModifierValue
  input TypeName className;
  input TypeName modifierName;
  output String modifierValue;
end getDerivedClassModifierValue;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="className" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="modifierName" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="modifierValue">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.generateEntryPoint">
          <code interfaceOnly="true">function generateEntryPoint
  input String fileName;
  input TypeName entryPoint;
  input String url = "https://trac.openmodelica.org/OpenModelica/newticket";
end generateEntryPoint;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="fileName" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.TypeName" name="entryPoint" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="url" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments/>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.numProcessors">
          <code interfaceOnly="true">function numProcessors
  output Integer result;
end numProcessors;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Integer" name="result">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.runScriptParallel">
          <code interfaceOnly="true">function runScriptParallel
  input String scripts[:];
  input Integer numThreads = numProcessors();
  input Boolean useThreads = false;
  output Boolean results[:];
end runScriptParallel;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="scripts" hasDefault="false">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
              <input_argument className="Integer" name="numThreads" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="useThreads" hasDefault="true">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="results">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.exit">
          <code interfaceOnly="true">function exit
  input Integer status;
end exit;</code>
          <components>
            <input_arguments>
              <input_argument className="Integer" name="status" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments/>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.threadWorkFailed">
          <code interfaceOnly="true"></code>
          <components>
            <input_arguments/>
            <output_arguments/>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getMemorySize">
          <code interfaceOnly="true">function getMemorySize
  output Real memory(unit = "MiB");
end getMemorySize;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="Real" name="memory">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.GC_gcollect_and_unmap">
          <code interfaceOnly="true"></code>
          <components>
            <input_arguments/>
            <output_arguments/>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.GC_expand_hp">
          <code interfaceOnly="true">function GC_expand_hp
  input Integer size;
  output Boolean success;
end GC_expand_hp;</code>
          <components>
            <input_arguments>
              <input_argument className="Integer" name="size" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.GC_set_max_heap_size">
          <code interfaceOnly="true">function GC_set_max_heap_size
  input Integer size;
  output Boolean success;
end GC_set_max_heap_size;</code>
          <components>
            <input_arguments>
              <input_argument className="Integer" name="size" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <record id="OpenModelica.Scripting.GC_PROFSTATS">
          <code interfaceOnly="false">record GC_PROFSTATS
  Integer heapsize_full;
  Integer free_bytes_full;
  Integer unmapped_bytes;
  Integer bytes_allocd_since_gc;
  Integer allocd_bytes_before_gc;
  Integer non_gc_bytes;
  Integer gc_no;
  Integer markers_m1;
  Integer bytes_reclaimed_since_gc;
  Integer reclaimed_bytes_before_gc;
end GC_PROFSTATS;</code>
          <components>
            <component className="Integer" name="heapsize_full" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="free_bytes_full" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="unmapped_bytes" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="bytes_allocd_since_gc" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="allocd_bytes_before_gc" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="non_gc_bytes" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="gc_no" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="markers_m1" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="bytes_reclaimed_since_gc" comment="">
              <dimensions/>
            </component>
            <component className="Integer" name="reclaimed_bytes_before_gc" comment="">
              <dimensions/>
            </component>
          </components>
          <classes/>
        </record>
        <function id="OpenModelica.Scripting.GC_get_prof_stats">
          <code interfaceOnly="true">function GC_get_prof_stats
  output GC_PROFSTATS gcStats;
end GC_get_prof_stats;</code>
          <components>
            <input_arguments/>
            <output_arguments>
              <output_argument className="OpenModelica.Scripting.GC_PROFSTATS" name="gcStats">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.checkInterfaceOfPackages">
          <code interfaceOnly="true">function checkInterfaceOfPackages
  input TypeName cl;
  input String dependencyMatrix[:, :];
  output Boolean success;
end checkInterfaceOfPackages;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="dependencyMatrix" hasDefault="false">
                <dimensions>
                  <dimension>:</dimension>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.sortStrings">
          <code interfaceOnly="true">function sortStrings
  input String arr[:];
  output String sorted[:];
end sortStrings;</code>
          <components>
            <input_arguments>
              <input_argument className="String" name="arr" hasDefault="false">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="sorted">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getClassInformation">
          <code interfaceOnly="true">function getClassInformation
  input TypeName cl;
  output String restriction, comment;
  output Boolean partialPrefix, finalPrefix, encapsulatedPrefix;
  output String fileName;
  output Boolean fileReadOnly;
  output Integer lineNumberStart, columnNumberStart, lineNumberEnd, columnNumberEnd;
  output String dimensions[:];
  output Boolean isProtectedClass;
  output Boolean isDocumentationClass;
  output String version;
  output String preferredView;
  output Boolean state;
  output String access;
end getClassInformation;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="comment">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="restriction">
                <dimensions/>
              </output_argument>
              <output_argument className="Boolean" name="encapsulatedPrefix">
                <dimensions/>
              </output_argument>
              <output_argument className="Boolean" name="finalPrefix">
                <dimensions/>
              </output_argument>
              <output_argument className="Boolean" name="partialPrefix">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="fileName">
                <dimensions/>
              </output_argument>
              <output_argument className="Boolean" name="fileReadOnly">
                <dimensions/>
              </output_argument>
              <output_argument className="Integer" name="columnNumberEnd">
                <dimensions/>
              </output_argument>
              <output_argument className="Integer" name="lineNumberEnd">
                <dimensions/>
              </output_argument>
              <output_argument className="Integer" name="columnNumberStart">
                <dimensions/>
              </output_argument>
              <output_argument className="Integer" name="lineNumberStart">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="dimensions">
                <dimensions>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
              <output_argument className="Boolean" name="isProtectedClass">
                <dimensions/>
              </output_argument>
              <output_argument className="Boolean" name="isDocumentationClass">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="version">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="preferredView">
                <dimensions/>
              </output_argument>
              <output_argument className="Boolean" name="state">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="access">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getTransitions">
          <code interfaceOnly="true">function getTransitions
  input TypeName cl;
  output String[:, :] transitions;
end getTransitions;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="transitions">
                <dimensions>
                  <dimension>:</dimension>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.addTransition">
          <code interfaceOnly="true">function addTransition
  input TypeName cl;
  input String from;
  input String to;
  input String condition;
  input Boolean immediate = true;
  input Boolean reset = true;
  input Boolean synchronize = false;
  input Integer priority = 1;
  input ExpressionOrModification annotate;
  output Boolean bool;
end addTransition;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="from" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="to" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="condition" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="immediate" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="reset" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="synchronize" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="priority" hasDefault="true">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.ExpressionOrModification" name="annotate" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="bool">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.deleteTransition">
          <code interfaceOnly="true">function deleteTransition
  input TypeName cl;
  input String from;
  input String to;
  input String condition;
  input Boolean immediate;
  input Boolean reset;
  input Boolean synchronize;
  input Integer priority;
  output Boolean bool;
end deleteTransition;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="from" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="to" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="condition" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="immediate" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="reset" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="synchronize" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="priority" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="bool">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.updateTransition">
          <code interfaceOnly="true">function updateTransition
  input TypeName cl;
  input String from;
  input String to;
  input String oldCondition;
  input Boolean oldImmediate;
  input Boolean oldReset;
  input Boolean oldSynchronize;
  input Integer oldPriority;
  input String newCondition;
  input Boolean newImmediate;
  input Boolean newReset;
  input Boolean newSynchronize;
  input Integer newPriority;
  input ExpressionOrModification annotate;
  output Boolean bool;
end updateTransition;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="from" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="to" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="oldCondition" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="oldImmediate" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="oldReset" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="oldSynchronize" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="oldPriority" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="newCondition" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="newImmediate" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="newReset" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Boolean" name="newSynchronize" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="Integer" name="newPriority" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.ExpressionOrModification" name="annotate" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="bool">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.getInitialStates">
          <code interfaceOnly="true">function getInitialStates
  input TypeName cl;
  output String[:, :] initialStates;
end getInitialStates;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="String" name="initialStates">
                <dimensions>
                  <dimension>:</dimension>
                  <dimension>:</dimension>
                </dimensions>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.addInitialState">
          <code interfaceOnly="true">function addInitialState
  input TypeName cl;
  input String state;
  input ExpressionOrModification annotate;
  output Boolean bool;
end addInitialState;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="state" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.ExpressionOrModification" name="annotate" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="bool">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.deleteInitialState">
          <code interfaceOnly="true">function deleteInitialState
  input TypeName cl;
  input String state;
  output Boolean bool;
end deleteInitialState;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="state" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="bool">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.updateInitialState">
          <code interfaceOnly="true">function updateInitialState
  input TypeName cl;
  input String state;
  input ExpressionOrModification annotate;
  output Boolean bool;
end updateInitialState;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="state" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="OpenModelica.$Code.ExpressionOrModification" name="annotate" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="bool">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <function id="OpenModelica.Scripting.generateScriptingAPI">
          <code interfaceOnly="true">function generateScriptingAPI
  input TypeName cl;
  input String name;
  output Boolean success;
  output String moFile;
  output String qtFile;
  output String qtHeader;
end generateScriptingAPI;</code>
          <components>
            <input_arguments>
              <input_argument className="OpenModelica.$Code.TypeName" name="cl" hasDefault="false">
                <dimensions/>
              </input_argument>
              <input_argument className="String" name="name" hasDefault="false">
                <dimensions/>
              </input_argument>
            </input_arguments>
            <output_arguments>
              <output_argument className="Boolean" name="success">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="moFile">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="qtFile">
                <dimensions/>
              </output_argument>
              <output_argument className="String" name="qtHeader">
                <dimensions/>
              </output_argument>
            </output_arguments>
          </components>
          <classes/>
        </function>
        <package id="OpenModelica.Scripting.Experimental">
          <classes>
            <function id="OpenModelica.Scripting.Experimental.relocateFunctions">
              <code interfaceOnly="true">function relocateFunctions
  input String fileName;
  input String names[:, 2];
  output Boolean success;
end relocateFunctions;</code>
              <components>
                <input_arguments>
                  <input_argument className="String" name="fileName" hasDefault="false">
                    <dimensions/>
                  </input_argument>
                  <input_argument className="String" name="names" hasDefault="false">
                    <dimensions>
                      <dimension>:</dimension>
                      <dimension>2</dimension>
                    </dimensions>
                  </input_argument>
                </input_arguments>
                <output_arguments>
                  <output_argument className="Boolean" name="success">
                    <dimensions/>
                  </output_argument>
                </output_arguments>
              </components>
              <classes/>
            </function>
          </classes>
        </package>
      </classes>
    </package>
  </classes>
</omcInterface>
